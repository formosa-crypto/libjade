#!/usr/bin/env bash

message=$1
top=$(cd "$(dirname "$0")/../../../" ; pwd -P)
dir=$top/$2
spattern=$3
rempty=$4

NORMAL="\e[0m"
BOLD="\e[1m"
RED="\e[31m"
GREEN="\e[32m"
YELLOW='\e[33m'

# given a pattern (for instance, *.TAG.log or *.TAG.error) and an output file
# - prints to $output the line counts for each *.TAG.log, sorted by the number of lines
status()
{
  pattern=$1;
  output=$2;

  find $dir -name $pattern | \
  while read file; do
   d=$(dirname $file);
   b=$(basename $file);
   c=$(wc -l <$file);
   echo "$c, $d/$b";
  done | \
  sort -t',' -g -k1 | sed -e 's/^[ \t]*//' -e 's/, \.\//, /' > $output
}

print()
{
  color=$1;
  filter=$2;
  file=$3;
  label=$4;

  egrep -E "$filter" $file | \
  while read line; do
   line=${line/$dir\//};
   echo -e "${color}${BOLD}${label}, ${line}${NORMAL}"
  done
}

clear_empty()
{
  file=$1;
  egrep -E "^0" $file | cut -d',' -f2 | \
  while read log; do
    rm -f "$log";
  done
}

warning=$(mktemp)
error=$(mktemp)

status "${spattern}.log" $warning;
status "${spattern}.error" $error;

# print
echo -e "${RED}${BOLD}$message: ${NORMAL}"

print $GREEN "^0" $warning "OK";
print $YELLOW "^[^0]" $warning "WARNING";
print $RED "" $error "ERROR";

if [ "$rempty" == "1" ]; then
  clear_empty $warning;
fi

rm $warning $error

