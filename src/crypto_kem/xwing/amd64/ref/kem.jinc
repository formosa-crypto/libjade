from Jade require "crypto_kem/xwing/amd64/ref/params.jinc"
from Jade require "crypto_kem/kyber/kyber768/ref/kem.jinc"
from Jade require "crypto_scalarmult/curve25519/amd64/mulx/curve25519.jinc"
from Jade require "crypto_scalarmult/curve25519/amd64/common/load_store4.jinc"
fro Jade require "common/tofromstack.jinc"

fn _crypto_xwing_keypair_derand_jazz(reg u64 pkp, reg u64 skp, reg ptr u8[96] randomnessp)
{
    reg u64 randomnessp1 mpkp mskp skxp pkx, xwpkp;

    __fromstack64u8(randomnessp1, randomnessp[0:64])
    __fromstack32u8(skxp, randomnessp[64:96])

    _crypto_kem_keypair_derand_jazz(mpkp, mskp, randomnessp1);
    reg u64[4] n = __load4((u64)[skxp])
    reg u64[4] pkx4 = __curve25519_mulx_base(n);

    __store4(pkx, pkx4); 


}

fn _crypto_xwing_enc_derand_jazz(reg u64 ctp, reg u64 shkp, reg u64 pkp, reg ptr u8[XWING_SYMBYTES] randomnessp)
{
}

inline
fn __crypto_xwing_dec_jazz(reg u64 shkp, reg u64 ctp, reg u64 skp)
{
    stack u8[XWING_CT_LEN] ctpc;
    stack u8[96] xw buf;
    stack u64 s_skmp s_skxp s_ctp s_shmp;
    reg u64 pkp;
    inline int i;

    s_shkp = shkp;
    s_ctp = ctp;





}