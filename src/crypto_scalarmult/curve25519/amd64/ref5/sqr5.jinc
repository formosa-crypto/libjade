inline fn __sqr5_rs(stack u64[5] xa) -> reg u64[5]
{
  reg bool cf;
  reg u64[5] r;
  reg u64 squarer01 squarer11 squarer21 squarer31 squarer41;
  reg u64 squarerax squarerdx;
  reg u64 squareredmask squaret;

  squarerax = xa[0];
  squarerdx, squarerax = squarerax * xa[0];
  r[0] = squarerax;
  squarer01 = squarerdx;
  squarerax = xa[0];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[1];
  r[1] = squarerax;
  squarer11 = squarerdx;
  squarerax = xa[0];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[2];
  r[2] = squarerax;
  squarer21 = squarerdx;
  squarerax = xa[0];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[3];
  r[3] = squarerax;
  squarer31 = squarerdx;
  squarerax = xa[0];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[4];
  r[4] = squarerax;
  squarer41 = squarerdx;
  squarerax = xa[1];
  squarerdx, squarerax = squarerax * xa[1];
  cf, r[2] += squarerax;
  _, squarer21 += squarerdx + cf;
  squarerax = xa[1];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[2];
  cf, r[3] += squarerax;
  _, squarer31 += squarerdx + cf;
  squarerax = xa[1];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[3];
  cf, r[4] += squarerax;
  _, squarer41 += squarerdx + cf;
  squarerax = xa[1];
  squarerax *= 38;
  squarerdx, squarerax = squarerax * xa[4];
  cf, r[0] += squarerax;
  _, squarer01 += squarerdx + cf;
  squarerax = xa[2];
  squarerdx, squarerax = squarerax * xa[2];
  cf, r[4] += squarerax;
  _, squarer41 += squarerdx + cf;
  squarerax = xa[2];
  squarerax *= 38;
  squarerdx, squarerax = squarerax * xa[3];
  cf, r[0] += squarerax;
  _, squarer01 += squarerdx + cf;
  squarerax = xa[2];
  squarerax *= 38;
  squarerdx, squarerax = squarerax * xa[4];
  cf, r[1] += squarerax;
  _, squarer11 += squarerdx + cf;
  squarerax = xa[3];
  squarerax *= 19;
  squarerdx, squarerax = squarerax * xa[3];
  cf, r[1] += squarerax;
  _, squarer11 += squarerdx + cf;
  squarerax = xa[3];
  squarerax *= 38;
  squarerdx, squarerax = squarerax * xa[4];
  cf, r[2] += squarerax;
  _, squarer21 += squarerdx + cf;
  squarerax = xa[4];
  squarerax *= 19;
  squarerdx, squarerax = squarerax * xa[4];
  cf, r[3] += squarerax;
  _, squarer31 += squarerdx + cf;
  squareredmask = 0x7FFFFFFFFFFFF;
  squarer01 <<= 13;
  squarerax = r[0];
  squarerax >>= 51;
  squarer01 |= squarerax;
  r[0] &= squareredmask;
  squarer11 <<= 13;
  squarerax = r[1];
  squarerax >>= 51;
  squarer11 |= squarerax;
  r[1] &= squareredmask;
  r[1] += squarer01;
  squarer21 <<= 13;
  squarerax = r[2];
  squarerax >>= 51;
  squarer21 |= squarerax;
  r[2] &= squareredmask;
  r[2] += squarer11;
  squarer31 <<= 13;
  squarerax = r[3];
  squarerax >>= 51;
  squarer31 |= squarerax;
  r[3] &= squareredmask;
  r[3] += squarer21;
  squarer41 <<= 13;
  squarerax = r[4];
  squarerax >>= 51;
  squarer41 |= squarerax;
  r[4] &= squareredmask;
  r[4] += squarer31;
  squarer41 = squarer41 * 19;
  r[0] += squarer41;
  squaret = r[0];
  squaret >>= 51;
  squaret += r[1];
  r[0] &= squareredmask;
  r[1] = squaret;
  squaret >>= 51;
  squaret += r[2];
  r[1] &= squareredmask;
  r[2] = squaret;
  squaret >>= 51;
  squaret += r[3];
  r[2] &= squareredmask;
  r[3] = squaret;
  squaret >>= 51;
  squaret += r[4];
  r[3] &= squareredmask;
  r[4] = squaret;
  squaret >>= 51;
  squaret *= 19;
  r[0] += squaret;
  r[4] &= squareredmask;

	return r;
}

inline fn __sqr5_ss(stack u64[5] xa) -> stack u64[5]
{
  stack u64[5] rs;
  reg u64[5] r;

  r = __sqr5_rs(xa);
  rs = #copy(r);

  return rs;
}

// ////////////////////////////////////////////////////////////////////////////

// TODO replace "-> reg ptr u64[5]" by "reg u64[5]" when r.a. @ f call
#[returnaddress="stack"]
fn _sqr5_p(reg ptr u64[5] xa) -> reg ptr u64[5]
{
  inline int i;
  reg bool cf;
  reg u64[5] r;
  reg u64 squarer01 squarer11 squarer21 squarer31 squarer41;
  reg u64 squarerax squarerdx;
  reg u64 squareredmask squaret;

  squarerax = xa[0];
  squarerdx, squarerax = squarerax * xa[0];
  r[0] = squarerax;
  squarer01 = squarerdx;
  squarerax = xa[0];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[1];
  r[1] = squarerax;
  squarer11 = squarerdx;
  squarerax = xa[0];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[2];
  r[2] = squarerax;
  squarer21 = squarerdx;
  squarerax = xa[0];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[3];
  r[3] = squarerax;
  squarer31 = squarerdx;
  squarerax = xa[0];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[4];
  r[4] = squarerax;
  squarer41 = squarerdx;
  squarerax = xa[1];
  squarerdx, squarerax = squarerax * xa[1];
  cf, r[2] += squarerax;
  _, squarer21 += squarerdx + cf;
  squarerax = xa[1];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[2];
  cf, r[3] += squarerax;
  _, squarer31 += squarerdx + cf;
  squarerax = xa[1];
  squarerax <<= 1;
  squarerdx, squarerax = squarerax * xa[3];
  cf, r[4] += squarerax;
  _, squarer41 += squarerdx + cf;
  squarerax = xa[1];
  squarerax *= 38;
  squarerdx, squarerax = squarerax * xa[4];
  cf, r[0] += squarerax;
  _, squarer01 += squarerdx + cf;
  squarerax = xa[2];
  squarerdx, squarerax = squarerax * xa[2];
  cf, r[4] += squarerax;
  _, squarer41 += squarerdx + cf;
  squarerax = xa[2];
  squarerax *= 38;
  squarerdx, squarerax = squarerax * xa[3];
  cf, r[0] += squarerax;
  _, squarer01 += squarerdx + cf;
  squarerax = xa[2];
  squarerax *= 38;
  squarerdx, squarerax = squarerax * xa[4];
  cf, r[1] += squarerax;
  _, squarer11 += squarerdx + cf;
  squarerax = xa[3];
  squarerax *= 19;
  squarerdx, squarerax = squarerax * xa[3];
  cf, r[1] += squarerax;
  _, squarer11 += squarerdx + cf;
  squarerax = xa[3];
  squarerax *= 38;
  squarerdx, squarerax = squarerax * xa[4];
  cf, r[2] += squarerax;
  _, squarer21 += squarerdx + cf;
  squarerax = xa[4];
  squarerax *= 19;
  squarerdx, squarerax = squarerax * xa[4];
  cf, r[3] += squarerax;
  _, squarer31 += squarerdx + cf;
  squareredmask = 0x7FFFFFFFFFFFF;
  squarer01 <<= 13;
  squarerax = r[0];
  squarerax >>= 51;
  squarer01 |= squarerax;
  r[0] &= squareredmask;
  squarer11 <<= 13;
  squarerax = r[1];
  squarerax >>= 51;
  squarer11 |= squarerax;
  r[1] &= squareredmask;
  r[1] += squarer01;
  squarer21 <<= 13;
  squarerax = r[2];
  squarerax >>= 51;
  squarer21 |= squarerax;
  r[2] &= squareredmask;
  r[2] += squarer11;
  squarer31 <<= 13;
  squarerax = r[3];
  squarerax >>= 51;
  squarer31 |= squarerax;
  r[3] &= squareredmask;
  r[3] += squarer21;
  squarer41 <<= 13;
  squarerax = r[4];
  squarerax >>= 51;
  squarer41 |= squarerax;
  r[4] &= squareredmask;
  r[4] += squarer31;
  squarer41 = squarer41 * 19;
  r[0] += squarer41;
  squaret = r[0];
  squaret >>= 51;
  squaret += r[1];
  r[0] &= squareredmask;
  r[1] = squaret;
  squaret >>= 51;
  squaret += r[2];
  r[1] &= squareredmask;
  r[2] = squaret;
  squaret >>= 51;
  squaret += r[3];
  r[2] &= squareredmask;
  r[3] = squaret;
  squaret >>= 51;
  squaret += r[4];
  r[3] &= squareredmask;
  r[4] = squaret;
  squaret >>= 51;
  squaret *= 19;
  r[0] += squaret;
  r[4] &= squareredmask;

  for i=0 to 5
  { xa[i] = r[i]; }

	return xa;
}

inline fn _sqr5_ss_(stack u64[5] xa) -> stack u64[5]
{
  inline int j;
  stack u64[5] ra;
  reg ptr u64[5] rp;
  reg u64 t;

  for j=0 to 5
  { t = xa[j]; ra[j] = t; }

  rp = ra;
  rp = _sqr5_p(rp);
  ra = rp;

  return ra;
}

inline fn _sqr5_s_(stack u64[5] x) -> stack u64[5]
{
  reg ptr u64[5] xp;

  xp = x;
  xp = _sqr5_p(xp);
  x = xp;

  return x;
}

// ////////////////////////////////////////////////////////////////////////////

#[returnaddress="stack"]
fn _it_sqr5_p(reg ptr u64[5] x, reg u32 i) -> reg ptr u64[5]
{
  reg bool zf;

  while {
    x = _sqr5_p(x);
    _,_,_,zf,i = #DEC_32(i);
  }(!zf)

  return x;
}

inline fn _it_sqr5_s_(stack u64[5] x, reg u32 i) -> stack u64[5]
{
  reg ptr u64[5] xp;

  xp = x;
  xp = _it_sqr5_p(xp, i);
  x = xp;

  return x;
}

inline fn _it_sqr5_ss_(stack u64[5] r x, reg u32 i) -> stack u64[5]
{
  inline int j;
  reg ptr u64[5] rp;
  reg u64 t;

  for j=0 to 5
  { t = x[j]; r[j] = t; }

  rp = r;
  rp = _it_sqr5_p(rp, i);
  r = rp;

  return r;
}

