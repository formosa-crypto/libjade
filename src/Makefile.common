
# --------------------------------------------------------------------
TOP = $(abspath $(dir $(filter %Makefile.common,$(MAKEFILE_LIST)))../)
SRC = $(TOP)/src/
CDIR = $(abspath $(dir $(abspath $(firstword $(MAKEFILE_LIST)))))
RDIR = $(subst $(SRC),,$(CDIR))
PDIR = $(TOP)/proof/$(RDIR)
OPERATION = $(word 1, $(subst /, ,$(RDIR)))
NAMESPACE = $(subst crypto_,jade_, $(subst -,_,$(subst /,_,$(RDIR))))

# --------------------------------------------------------------------
CIDIR =
CIT =
ifeq ($(CI),1)
CIDIR := .ci
CIT = 2> $(CIDIR)/$(@F).log && rm -f $(CIDIR)/$(@F).error || \
     (echo $$? > $(CIDIR)/$(@F).error && \
      cat $(CIDIR)/$(@F).log >> $(CIDIR)/$(@F).error && \
      rm $(CIDIR)/$(@F).log && \
      exit 127)
endif

# --------------------------------------------------------------------
JEXT    ?= jazz
override JFLAGS += -noinsertarraycopy
JINCLUDE = -I Jade:$(SRC)
JASMIN  ?= jasminc
JASMINC := $(JASMIN) $(JFLAGS) $(JINCLUDE)
COMPILE  = ($(JASMINC) -o $@ $<) $(CIT)

# --------------------------------------------------------------------
include $(SRC)/$(OPERATION)/EcFlags.mk

ECDIR     := $(PDIR)
ECFLAGS    = $(subst namespace,$(NAMESPACE),$(ECFN)) -oec $(notdir $@)
EXTRACT_S  = (cd $(ECDIR) && $(JASMINC) $(ECFLAGS) $(CDIR)/$<) $(CIT)
EXTRACT_CT = (cd $(ECDIR) && $(JASMINC) -CT $(ECFLAGS) $(CDIR)/$<) $(CIT)

# --------------------------------------------------------------------
DEPSDIR := .deps
DEPS = ((printf "$@: "; printf "$(basename $(abspath $*)).jazz "; $(JASMINC) -print-dependencies $<) > $(DEPSDIR)/$(@F).d) $(CIT)

# --------------------------------------------------------------------
compile: $(SRCS:%.$(JEXT)=%.s)
	@true

extract: extract_s extract_ct
	@true

extract_s: $(SRCS:%.$(JEXT)=$(ECDIR)/%_s.ec)
	@true

extract_ct: $(SRCS:%.$(JEXT)=$(ECDIR)/%_ct.ec)
	@true

# --------------------------------------------------------------------
%.s : %.$(JEXT)
%.s : %.$(JEXT) $(DEPSDIR)/%.s.d | $(DEPSDIR) $(CIDIR)
	@$(DEPS)
	@$(COMPILE)

$(ECDIR)/%_s.ec : %.$(JEXT)
$(ECDIR)/%_s.ec : %.$(JEXT) $(DEPSDIR)/%_s.ec.d | $(DEPSDIR) $(ECDIR) $(CIDIR)
	@$(DEPS)
	@$(EXTRACT_S)

$(ECDIR)/%_ct.ec : %.$(JEXT)
$(ECDIR)/%_ct.ec : %.$(JEXT) $(DEPSDIR)/%_ct.ec.d | $(DEPSDIR) $(ECDIR) $(CIDIR)
	@$(DEPS)
	@$(EXTRACT_CT)

$(DEPSDIR): ; @mkdir -p $@
$(ECDIR): ; @mkdir -p $@; touch $@/.gitkeep
ifeq ($(CI),1)
$(CIDIR): ; @mkdir -p $@
endif

DEPFILES := \
 $(SRCS:%.$(JEXT)=$(DEPSDIR)/%.s.d) \
 $(SRCS:%.$(JEXT)=$(DEPSDIR)/%_s.ec.d) \
 $(SRCS:%.$(JEXT)=$(DEPSDIR)/%_ct.ec.d)

$(DEPFILES):

include $(wildcard $(DEPFILES))

# --------------------------------------------------------------------
.PHONY: .jflags
.jflags:
	@echo -n "$(JFLAGS)" > .jflags

# --------------------------------------------------------------------
.PHONY: clean

clean:
	@rm -fr $(DEPSDIR) *.s *.o *.a .jflags
ifeq ($(CI),1)
	@rm -fr $(CIDIR)
endif

